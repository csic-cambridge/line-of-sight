openapi: 3.0.3
info:
    title: CDBB LoS API
    description: CDBB Line Of Sight
    license:
        name: GPLv3
        url: https://www.gnu.org/licenses/gpl-3.0.en.html
    version: 1.0.0
externalDocs:
    description: Find out more about CDBB and Line of Sight
    url: https://www.cdbb.cam.ac.uk/research/digital-built-environment/line-sight-asset-management-methodology-support-organisational
servers:
    - url: 'http://localhost:8080/api'
# Note: all project_ids in paths must be preceded by "/pid/" in path for correct parsing
# Any changes to the api must be accompanied by changes to the class com.costain.cdbb.core.permissions.ApiPermissions
paths:
    /oauth-providers:
        post:
            operationId: fetchOauth2ProviderDetails
            summary: Gets OAuth2.0 providers and urls for login page
            description: Gets OAuth2.0 providers and urls for login page
            responses:
                '201':
                    description: Successful fetch operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/login_provider'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
            requestBody:
                description: Empty
                content:
                    application/json:
                        schema: {}

    /organisational-objectives:
        post:
            operationId: addOrganisationalObjective
            summary: Adds a new organisational objective
            description: Adds a new organisational objective when the id is unknown
            responses:
                '201':
                    description: Successful creation operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/organisational_objective_with_id'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
            requestBody:
                description: The new organisational objective
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/organisational_objective'
        get:
            operationId: findAllOrganisationalObjectives
            summary: Gets the full list of (non-deleted) organisational objectives
            description: Gets the full list of (non-deleted) organisational objectives
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/organisational_objective_with_id'
                            example:
                                - id: 064fecac-d5e8-4ee5-8e96-d4bc63cc95ed
                                  name: 'Objective #1'
                                  oirs:
                                      - 'OIR #1'
                                      - 'OIR #2'
                                  frs:
                                      - 1cfda9b4-1466-4695-8ab2-c19848fa4542
                                - id: fc2aae01-5543-4218-adda-99f459e61295
                                  name: 'Objective #2'
                                  oirs:
                                      - 'OIR #3'
                                      - 'OIR #4'
                                  frs:
                                      - '1cfda9b4-1466-4695-8ab2-c19848fa4542'
                                      - '884deff4-9a42-4436-8ef2-561777a4f3fd'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
    /organisational-objectives/{id}:
        put:
            operationId: updateOrganisationalObjective
            summary: update an organisational objective
            description: Updates an organisational objective
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The UUID of the objective being manipulated
            responses:
                '200':
                    description: Successful update operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/organisational_objective_with_id'
                '201':
                    description: Successful creation operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/organisational_objective_with_id'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
            requestBody:
                description: The properties of the organisational objective to add or update (name and or oirs)
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/organisational_objective'

        delete:
            operationId: deleteOrganisationalObjective
            summary: Deletes an organisational objective
            description: Deletes a single organisational objective with the given ID.
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The UUID of the objective being manipulated
            responses:
                '204':
                    description: Successful operation
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
    /project-organisational-objectives/pid/{projectid}:
        get:
            operationId: findAllProjectOrganisationalObjectives
            summary: Gets the full list of project organisational objectives
            description: Gets the full list of project organisational objectives
            parameters:
                - in: path
                  name: projectid
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The UUID of the project organisational objectives being fetched

            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/project_organisational_objective_with_id'
                            example:
                                - id: 064fecac-d5e8-4ee5-8e96-d4bc63cc95ed
                                  name: 'Objective #1'
                                  oirs:
                                      - 'OIR #1'
                                      - 'OIR #2'
                                  frs:
                                      - 1cfda9b4-1466-4695-8ab2-c19848fa4542

                                - id: fc2aae01-5543-4218-adda-99f459e61295
                                  name: 'Objective #2'
                                  oirs:
                                      - 'OIR #3'
                                      - 'OIR #4'
                                  frs:
                                      - '1cfda9b4-1466-4695-8ab2-c19848fa4542'
                                      - '884deff4-9a42-4436-8ef2-561777a4f3fd'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
    /project-organisational-objectives/pid/{projectid}/{pooid}:
        put:
            operationId: updateProjectOrganisationalObjective
            summary: Updates a project organisational objective
            description: Updates the ooversion of the project organisational objective
            parameters:
                -   in: path
                    name: projectid
                    required: true
                    schema:
                        type: string
                        format: uuid
                    description: The UUID of the project id of the project organisational objective being updated
                -   in: path
                    name: pooid
                    required: true
                    schema:
                        type: string
                        format: uuid
                    description: The UUID of the project organisational objective being updated
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                    $ref: '#/components/schemas/project_organisational_objective_with_id'
                            example:
                                -   id: 064fecac-d5e8-4ee5-8e96-d4bc63cc95ed
                                    name: 'Objective #1'
                                    oirs:
                                        - 'OIR #1'
                                        - 'OIR #2'
                                    frs:
                                        - 1cfda9b4-1466-4695-8ab2-c19848fa4542

                                -   id: fc2aae01-5543-4218-adda-99f459e61295
                                    name: 'Objective #2'
                                    oirs:
                                        - 'OIR #3'
                                        - 'OIR #4'
                                    frs:
                                        - '1cfda9b4-1466-4695-8ab2-c19848fa4542'
                                        - '884deff4-9a42-4436-8ef2-561777a4f3fd'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
            requestBody:
                description: The project_organisational_objective_with_id to update with
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/project_organisational_objective_update'
        delete:
            operationId: deleteProjectOrganisationalObjective
            summary: Deletes a project organisational objective
            description: Deletes a single project organisational objective with the given ID.
            parameters:
                -   in: path
                    name: projectid
                    required: true
                    schema:
                        type: string
                        format: uuid
                    description: The project UUID of the project organisational objective being deleted
                -   in: path
                    name: pooid
                    required: true
                    schema:
                        type: string
                        format: uuid
                    description: The UUID of the project organisational objective being deleted
            responses:
                '204':
                    description: Successful operation
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'

    /functional-requirements/pid/{projectid}:
        post:
            operationId: addFunctionalRequirement
            summary: Adds a new functional requirement
            description: Adds a new functional requirement when the id is unknown
            parameters:
                - in: path
                  name: projectid
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The project UUID of the functional output being created
            responses:
                '201':
                    description: Successful creation operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/functional_requirement_with_id'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
            requestBody:
                description: The new functional requirement
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/functional_requirement'
        get:
            operationId: findAllFunctionalRequirements
            summary: Gets the full list of functional requirements
            description: Gets the full list of functional requirements
            parameters:
                - in: path
                  name: projectid
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The project UUID of the functional output being manipulated
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/functional_requirement_with_id'
                            example:
                                - id: 1cfda9b4-1466-4695-8ab2-c19848fa4542
                                  name: 'FR #1'
                                  fos:
                                      - 0d72e486-74cf-45bc-b11e-cbb7a16b698f
                                      - 91990373-dc68-4705-ace8-2a4d36d5bcce
                                      - fbdd7a8a-57a6-46d1-a2d1-af57943fe5cc
                                - id: 884deff4-9a42-4436-8ef2-561777a4f3fd
                                  name: 'FR #2'
                                  fos:
                                      - 0d72e486-74cf-45bc-b11e-cbb7a16b698f
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
    /functional-requirements/pid/{projectid}/{id}:
        put:
            operationId: updateFunctionalRequirement
            summary: Add or update a functional requirement
            description: Adds a functional requirement if the ID is known or update an existing one
            parameters:
                - in: path
                  name: projectid
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The project UUID of the functional requirement being updated
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The UUID of the functional requirement being updated
            responses:
                '200':
                    description: Successful update operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/functional_requirement_with_id'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
            requestBody:
                description: The properties of the functional requirement to update
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/functional_requirement'
        delete:
            operationId: deleteFunctionalRequirement
            summary: Deletes a functional requirement
            description: Deletes a single functional requirement with the given ID.
            parameters:
                - in: path
                  name: projectid
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The project UUID of the functional output being deleted
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The UUID of the functional requirement being manipulated
            responses:
                '204':
                    description: Successful operation
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
    /functional-outputs/pid/{projectid}:
        post:
            operationId: addFunctionalOutput
            summary: Adds a new functional output
            description: Adds a new functional output to the project when the id is unknown
            parameters:
                - in: path
                  name: projectid
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The project UUID of the functional output being created
            responses:
                '201':
                    description: Successful creation operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/functional_output_with_id'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
            requestBody:
                description: The new functional output
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/functional_output'
        get:
            operationId: findFunctionalOutputsByProject
            summary: Gets all functional outputs for a project
            description: Gets all functional outputs for a project
            parameters:
                - in: path
                  name: projectid
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The project UUID of the functional output being requested
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/functional_output_with_id'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
    /functional-outputs/pid/{projectid}/{id}:
        put:
            operationId: updateFunctionalOutput
            summary: Update a functional output
            description: Updates FIRs to those provided
            parameters:
                - in: path
                  name: projectid
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The project UUID of the functional output being manipulated
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The id of the functional output being updated
            responses:
                '200':
                    description: Successful update operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/functional_output_with_id'
                '201':
                    description: Successful update operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/functional_output_with_id'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
            requestBody:
                description: The properties of the functional output to update
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/functional_output'
        delete:
            operationId: deleteFunctionalOutput
            summary: Deletes an functional output
            description: Deletes a single functional output with the given ID.
            parameters:
                - in: path
                  name: projectid
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The project UUID of the functional output being deleted
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The id of the functional output being deleted
            responses:
                '204':
                    description: Successful operation
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
    /firs:
        get:
            operationId: fetchFirs
            summary: Gets all FIRs for all projects
            description: Gets all FIRs for all projects
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/firs'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
    /firs/import/pid/{projectid}:
        post:
            operationId: importFunctionalInformationRequirements
            summary: Import FO/FIRS
            description: Imports FO with FIRS to project
            parameters:
                -   in: path
                    name: projectid
                    required: true
                    schema:
                        type: string
                        format: uuid
                    description: The project UUID receiving the FIRs
            responses:
                '200':
                    description: Successful import operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/functional_output_with_id'

                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
            requestBody:
                description: The csv file containing FO and FIR pairs
                required: true
                content:
                    application/octet-stream:
                        schema:
                            type: string
                            format: base64
    /oirs/link/{linkunlink}/pid/{projectid}:
        post:
            operationId: linkOirsAirs
            summary: Link a oirs with an airs
            description: Links or unlinks an oir with an air
            parameters:
                -   in: path
                    name: projectid
                    required: true
                    schema:
                        type: string
                        format: uuid
                    description: The project UUID for the oir and air
                -   in: path
                    name: linkunlink
                    required: true
                    schema:
                        type: integer
                        minimum: 0
                        maximum: 1
                    description: True if creating link, false if breaking link
            responses:
                '200':
                    description: Successful link operation
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
            requestBody:
                description: Oir id and Air id
                required: true
                content:
                    application/json:
                        schema:
                            type: string # keys = 'oirId' and 'airId'
                            format: json
    /airs:
        get:
            operationId: fetchAirs
            summary: Gets all AIRs for all projects
            description: Gets all AIRs for all projects
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/airs'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'

    /airs/import/pid/{projectid}:
        post:
            operationId: importAssetInformationRequirements
            summary: Import Asset/AIRs
            description: Imports Asset with AIRS to project
            parameters:
                -   in: path
                    name: projectid
                    required: true
                    schema:
                        type: string
                        format: uuid
                    description: The project UUID receiving the AIRs
            responses:
                '200':
                    description: Successful import operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/asset_with_id'

                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
            requestBody:
                description: The csv file containing Asset and AIR pairs
                required: true
                content:
                    application/octet-stream:
                        schema:
                            type: string
                            format: base64
    /assets/pid/{projectid}:
        post:
            operationId: addAsset
            summary: Adds a new asset
            description: Adds a new asset to the project when the id is unknown
            parameters:
                - in: path
                  name: projectid
                  required: true
                  schema:
                    type: string
                    format: uuid
                  description: The project UUID of the asset being added
            responses:
                '201':
                    description: Successful creation operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/asset_with_id'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
            requestBody:
                description: The new asset
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/asset'
        get:
            operationId: findAssetsByProject
            summary: Gets all assets for a project
            description: Gets all assets for a project
            parameters:
                - in: path
                  name: projectid
                  required: true
                  schema:
                    type: string
                    format: uuid
                  description: The project UUID of the assets being requested
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/asset_with_id'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
    /assets/pid/{projectid}/{id}:
        put:
            operationId: updateAsset
            summary: Update an asset
            description: Can only update the list of AIRs
            parameters:
                - in: path
                  name: projectid
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The project UUID of the asset being updated
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The id of the asset being updated
            responses:
                '200':
                    description: Successful update operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/asset_with_id'
                '201':
                    description: Successful creation operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/asset_with_id'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
            requestBody:
                description: The properties of the asset to add or update
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/asset'

        delete:
            operationId: deleteAsset
            summary: Deletes an asset
            description: Deletes a single asset with the given ID.
            parameters:
                - in: path
                  name: projectid
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The project UUID of the asset being deleted
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The id of the asset being deleted
            responses:
                '204':
                    description: Successful operation
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
    /project/import:
        post:
            operationId: importProject
            summary: Imports a Project
            description: Imports a project using file upload
            responses:
                '201':
                    description: Successful import operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/project_with_id'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
            requestBody:
                description: The project name and upload data (name is first part of upload data)
                required: true
                content:
                    application/octet-stream:
                        schema:
                            type: string
                            format: base64
    /project/export/pid/{projectid}:
        get:
            operationId: exportProject
            summary: Exports the specified project as a download to the client
            description: Exports the specified project as a download to the client
            parameters:
                -   in: path
                    name: projectid
                    required: true
                    schema:
                        type: string
                        format: uuid
                    description: The project UUID of the asset being exported
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/octet-stream:
                            schema:
                                type: string
                                format: base64
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
    /project:
        post:
            operationId: addProject
            summary: Creates a new Project
            description: Creates a new Project
            responses:
                '201':
                    description: Successful creation operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/project_with_id'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
            requestBody:
                description: The new project name, fo dd id and asset dd id and optional projectId to import FO's from and optional projectId to import assets from
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/project_with_import_project_ids'
        get:
            operationId: findAllProjects
            summary: Gets the full list of projects
            description: Gets the full list of projects
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/project_with_id'
                            example:
                                - id: 5799ee92-f25c-4173-aecd-dfa871719065
                                  name: 'Project #1'
                                - id: 0ee6c05d-c82c-494f-b13c-82f8d64178a1
                                  name: 'Project #2'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
    /project/pid/{projectid}:
        put:
            operationId: renameProject
            summary: Renames a project
            description: Renames an existing project
            parameters:
                - in: path
                  name: projectid
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The UUID of the project being renamed

            responses:
                '200':
                    description: Successful rename operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/project'
                '201':
                    description: Successful creation operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/project'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
            requestBody:
                description: The properties of the project to rename
                required: true
                content:
                    application/json:
                        schema:
                            type: string # key = 'name'
                            format: json

        delete:
            operationId: deleteProject
            summary: Deletes a project
            description: Deletes a project with the given ID.
            parameters:
                - in: path
                  name: projectid
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The UUID of the project being manipulated
            responses:
                '204':
                    description: Successful operation
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
        post:
            operationId: copyProject
            summary: Creates a new Project which is a copy of the specified one
            description: Copies a Project
            parameters:
                -   in: path
                    name: projectid
                    required: true
                    schema:
                        type: string
                        format: uuid
                    description: The UUID of the project being copied
            responses:
                '201':
                    description: Successful creation operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/project_with_id'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
            requestBody:
                description: The name of the new project
                required: true
                content:
                    application/json:
                        schema:
                            type: string # key = 'name'
                            format: json

    /project/fodd/{foddid}:
        get:
            operationId: findProjectsUsingFoDataDictionary
            summary: Gets a list of projects using the specified functional output data dictionary
            description: Gets a list of projects using the specified functional output data dictionary
            parameters:
                -   in: path
                    name: foddid
                    required: true
                    schema:
                        type: string
                        format: uuid
                    description: The UUID of the fo data dictionary the projects must use
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/project_with_id'
                            example:
                                -   id: 5799ee92-f25c-4173-aecd-dfa871719065
                                    name: 'asset dd #1'
                                -   id: 0ee6c05d-c82c-494f-b13c-82f8d64178a1
                                    name: 'asset dd #2'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
    /project/assetdd/{assetdid}:
        get:
            operationId: findProjectsUsingAssetDataDictionary
            summary: Gets a list of projects using the specified asset data dictionary
            description: Gets a list of projects using the specified asset data dictionary
            parameters:
                -   in: path
                    name: assetdid
                    required: true
                    schema:
                        type: string
                        format: uuid
                    description: The UUID of the fo data dictionary the projects must use
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/project_with_id'
                            example:
                                -   id: 5799ee92-f25c-4173-aecd-dfa871719065
                                    name: 'project #1'
                                    fo_dd_id: 5799ee92-f25c-4173-aecd-dfa871719065
                                    asset_dd_id: 1234ee92-f25c-4173-aecd-dfa871719065
                                -   id: 0ee6c05d-c82c-494f-b13c-82f8d64178a1
                                    name: 'project #2'
                                    fo_dd_id: 5799ee92-f25c-4173-aecd-dfa871719065
                                    asset_dd_id: 1234ee92-f25c-4173-aecd-dfa871719065
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
    /asset-data-dictionary:
        get:
            operationId: findAllAssetDataDictionaries
            summary: Gets the full list of asset data dictionaries
            description: Gets the full list of asset data dictionaries
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/asset_data_dictionary'
                            example:
                                -   id: 5799ee92-f25c-4173-aecd-dfa871719065
                                    name: 'asset dd #1'
                                -   id: 0ee6c05d-c82c-494f-b13c-82f8d64178a1
                                    name: 'asset dd #2'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
        post:
            operationId: importAssetDataDictionary
            summary: Imports an asset data dictionary
            description: Imports an asset data dictionary using file upload
            responses:
                '201':
                    description: Successful import operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/asset_data_dictionary'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
            requestBody:
                description: The dictionary name and upload data (name is first line of upload data)
                required: true
                content:
                    application/octet-stream:
                        schema:
                            type: string
                            format: base64
    /asset-data-dictionary/{id}:
        get:
            operationId: findAllAssetDataDictionaryEntries
            summary: Get the assets data dictionary
            description: Gets all of the data dictionary keys and values for assets
            parameters:
                -   in: path
                    name: id
                    required: true
                    schema:
                        type: string
                        format: uuid
                    description: The UUID of the data dictionary being requested
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/data_dictionary_entry'
                            example:
                                - id: Ss_15_10_33_34
                                  text: Ground gas collection and venting systems
                                - id: Ss_25_16_94_95
                                  text: Vehicle safety control systems
                                - id: Ss_40_10_30_70
                                  text: Regulatory signage systems
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'


    /functional-output-data-dictionary:
        get:
            operationId: findAllFunctionalOutputDataDictionaries
            summary: Gets the full list of functional output data dictionaries
            description: Gets the full list of functional output data dictionaries
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/functional_output_data_dictionary'
                            example:
                                -   id: 5799ee92-f25c-4173-aecd-dfa871719065
                                    name: 'functional output dd #1'
                                -   id: 0ee6c05d-c82c-494f-b13c-82f8d64178a1
                                    name: 'functional output dd #2'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
        post:
            operationId: importFunctionalOutputDataDictionary
            summary: Imports a functional output data dictionary
            description: Imports a functional output data dictionary using file upload
            responses:
                '201':
                    description: Successful import operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/functional_output_data_dictionary'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
            requestBody:
                description: The dictionary name and upload data (name is first part of upload data)
                required: true
                content:
                    application/octet-stream:
                        schema:
                            type: string
                            format: base64

    /functional-output-data-dictionary/{id}:
        get:
            operationId: findAllFunctionalOutputDataDictionaryEntries
            summary: Get the functional objects data dictionary for the dictionary id
            description: Gets all of the data dictionary keys and values for functional objects
            parameters:
                -   in: path
                    name: id
                    required: true
                    schema:
                        type: string
                        format: uuid
                    description:
                        The UUID of the data dictionary being requested
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/data_dictionary_entry'
                            example:
                                - id: EF_35_10_30
                                  text: EF_35_10_30-External stairs
                                - id: EF_37_17_15
                                  text: EF_37_17_15-Chimneys
                                - id: EF_70_80
                                  text: EF_70_80-Lighting
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'

    /me:
        get:
            operationId: fetchLoggedInUser
            summary: Gets the logged in user
            description:
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'

    /user:
        get:
            operationId: findAllUsers
            summary: Gets all non-deleted users
            description:
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/user'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'

    /user/{userid}:
        get:
            operationId: findUserById
            summary: Gets a specific user,
            description:
            parameters:
                - in: path
                  name: userid
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The user UUID of the requested user

            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
        put:
            operationId: updateUser
            summary: Updates a user
            description: Updates an existing user
            parameters:
                - in: path
                  name: userid
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The UUID of the user being updated

            responses:
                '200':
                    description: Successful update operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user'
                '201':
                    description: Successful creation operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
            requestBody:
                description: The properties of the user to update
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user'


    /project-permissions/{userid}/pid/{projectid}:
        get:
            operationId: findPermissionsByUserAndProject
            summary: Gets all permissions for a user and project combination
            description:
            parameters:
                - in: path
                  name: userid
                  required: true
                  schema:
                      type: string
                      #format: uuid
                  description: The user UUID of the requested user or 'me' for logged in user
                - in: path
                  name: projectid
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The user UUID of the requested project

            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/project_permissions'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
        put:
            operationId: updatePermissionsForUserAndProject
            summary: Updates a user/project set of permissions
            description:
            parameters:
                - in: path
                  name: userid
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The UUID of the user being updated
                - in: path
                  name: projectid
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The user UUID of the requested project

            responses:
                '200':
                    description: Successful update operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/project_permissions'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
            requestBody:
                description: The permissions (on and off) of the user for the project
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/project_permissions'
    /user-permissions/{userid}:
        get:
            operationId: findPermissionsByUser
            summary: Gets all user permissions (except super user status))
            description:
            parameters:
                - in: path
                  name: userid
                  required: true
                  schema:
                      type: string
                      #format: uuid
                  description: The user UUID of the requested user or 'me' for logged in user
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user_permissions'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
        put:
            operationId: updatePermissionsForUser
            summary: Updates set of user permissions for a user (except super user status)
            description:
            parameters:
                - in: path
                  name: userid
                  required: true
                  schema:
                      type: string
                      format: uuid
                  description: The UUID of the user being updated
            responses:
                '200':
                    description: Successful update operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user_permissions'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthorised'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
            requestBody:
                description: The permissions (on and off) of the user (not super user status)
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user_permissions'

components:
    schemas:
        login_provider:
            type: object
            properties:
                name:
                    description: "Authentication Provider"
                    type: string
                    example: 'Google'
                url:
                    description: "The login url for the provider"
                    type: string
                    example: '/azure/login'
            required:
                - name
                - url
            example:
                -   name: 'Google'
                    url: '/google.com/login'
                -   name: 'Azure'
                    url: '/azure.com/login'

        organisational_objective:
            type: object
            properties:
                name:
                    description: "The organisational objective"
                    type: string
                    example: 'Objective #1'
                oirs:
                    description: "The set of organisational information requirements associated with this organisational objective"
                    type: array
                    items:
                        $ref: '#/components/schemas/oir'
                    example:
                        - id:  fc3a0c12-2720-494f-90d9-83b37030f114
                          oir: 'OIR 1'
                        - id:  c88e33d0-6738-41aa-9f0e-86b85032e194
                          oir: 'OIR #2'
                is_deleted:
                    description: "Whether the oo is deleted or not, 0=not deleted,1=deleted"
                    type: boolean
                    example: false
            required:
                - name
                - oirs
                - is_deleted

            example:
                name: 'Objective #1'
                oirs:
                    - 'OIR #1'
                    - 'OIR #2'
                is_deleted: false

        organisational_objective_with_id:
            allOf:
                - $ref: '#/components/schemas/organisational_objective'
            type: object
            properties:
                id:
                    description: The UUID of this entity
                    type: string
                    format: uuid
            required:
                - id
            example:
                id: 064fecac-d5e8-4ee5-8e96-d4bc63cc95ed
                name: 'Objective #1'
                oirs:
                    -   id: fc3a0c12-2720-494f-90d9-83b37030f114
                        oir: 'OIR 1'
                    -   id: c88e33d0-6738-41aa-9f0e-86b85032e194
                        oir: 'OIR #2'

        project_organisational_objective_update:
            type: object
            properties:
                id:
                    description: "the poo id"
                    type: string
                    format: UUID
                oo_version_id:
                    description: "The oo version id to update to (null if no update reqd)"
                    type: string
                    format: UUID
                    example:
                        -   oo_version_id: 12345678-d5e8-4ee5-8e96-d4bc63cc95ed

                frs:
                    description: "The IDs of the set of functional requirement that link to this project organisational objective"
                    type: array
                    items :
                        type: string
                        format: uuid
                    example:
                        - 1cfda9b4-1466-4695-8ab2-c19848fa4542
                        - 884deff4-9a42-4436-8ef2-561777a4f3fd
                        - 2853000a-ec64-4d5b-9dcd-f73d8a79e1cc
                oir_ids:
                    description: "The IDs of the organisational information requirements to be used by the project organisational objective"
                    type: array
                    items:
                        type: string
                        format: uuid
                    example:
                        - fc3a0c12-2720-494f-90d9-83b37030f114
                        - c88e33d0-6738-41aa-9f0e-86b85032e194

            required: # only specified fields will be updated
                - id
                - oir_ids

            example:
                id: '064fecac-d5e8-4ee5-8e96-d4bc63cc95ee'
                frs:
                    - '1cfda9b4-1466-4695-8ab2-c19848fa4542'
                    - '884deff4-9a42-4436-8ef2-561777a4f3fd'
                oo_version_id: '12345678-9a42-4436-8ef2-561777a4f3fd'

        project_organisational_objective:
            type: object
            properties:
                project_id:
                    description: "the project the poo belongs to"
                    type: string
                    format: UUID
                name:
                    description: "The name for the poo, based on the version of the oo"
                    type: string
                oo_version_id:
                    description: "The UUID of the project's current oo version"
                    type: string
                    format: uuid
                oo_is_deleted:
                    description: "Whether the oo is deleted or not, 0=not deleted,1=deleted"
                    type: boolean
                    example: false
                oo_versions:
                    description: "The set of oo_versions from project current to latest organisational"
                    type: array
                    items:
                        $ref: '#/components/schemas/oo_version'
                    example:
                        -   id: 12345678-d5e8-4ee5-8e96-d4bc63cc95ed
                            name: "OO #1"
                            dateCreated: "xxxx"
                        -   id: 12345678-d5e8-4ee5-8e96-d4bc63cc95ed
                            name: "OO #2"
                            dateCreated: "xxxx"
                oirs:
                    description: "The set of organisational information requirements associated with this project organisational objective"
                    type: array
                    items:
                        $ref: '#/components/schemas/oirs_with_linked_airs'
                    example:
                    -   id: fc3a0c12-2720-494f-90d9-83b37030f114
                        oir: 'OIR 1'
                        airs:
                            - id: 98745678-d5e8-4ee5-8e96-d4bc63cc95ed
                              airs: "linked air"
                    -   id: c88e33d0-6738-41aa-9f0e-86b85032e194
                        oir: 'OIR #2'
                frs:
                    description: "The IDs of the set of functional requirement that link to this project organisational objective"
                    type: array
                    items :
                        type: string
                        format: uuid
                    example:
                        - 1cfda9b4-1466-4695-8ab2-c19848fa4542
                        - 884deff4-9a42-4436-8ef2-561777a4f3fd
                        - 2853000a-ec64-4d5b-9dcd-f73d8a79e1cc
            required:
                - project_id

            example:
                project_id: '064fecac-d5e8-4ee5-8e96-d4bc63cc95ee'
                oirs:
                    -   id: fc3a0c12-2720-494f-90d9-83b37030f114
                        oir: 'OIR 1'
                    -   id: c88e33d0-6738-41aa-9f0e-86b85032e194
                        oir: 'OIR #2'
                frs:
                    - 1cfda9b4-1466-4695-8ab2-c19848fa4542
                    - 884deff4-9a42-4436-8ef2-561777a4f3fd
                is_deleted: false

        project_organisational_objective_with_id:
            allOf:
                - $ref: '#/components/schemas/project_organisational_objective'
            type: object
            properties:
                id:
                    description: The UUID of this entity
                    type: string
                    format: uuid
                deleted_oirs:
                    description: "The set of organisational information requirements currently deleted for this project organisational objective"
                    type: array
                    items:
                        $ref: '#/components/schemas/oir'
            required:
                - id

            example:
                id: 064fecac-d5e8-4ee5-8e96-d4bc63cc95ed
                project_id: '064fecac-d5e8-4ee5-8e96-d4bc63cc95ee'
                oirs:
                    -   id: fc3a0c12-2720-494f-90d9-83b37030f114
                        oir: 'OIR 1'
                    -   id: c88e33d0-6738-41aa-9f0e-86b85032e194
                        oir: 'OIR #2'
                deleted_oirs:
                    -   id: fc3a0c12-2720-494f-90d9-83b37030f115
                        oir: 'OIR 15'
                    -   id: c88e33d0-6738-41aa-9f0e-86b85032e195
                        oir: 'OIR #25'
                is_deleted: false
                ooVersion:
                    name: 'Organisational Objective #1 Version 2'
                    oovId: 3a1e57a7-bc10-48e4-b8a7-2ced7ba38e73
                    date_created: 12344555656
                frs:
                    - 1cfda9b4-1466-4695-8ab2-c19848fa4542
                    - 884deff4-9a42-4436-8ef2-561777a4f3fd
        functional_requirement:
            type: object
            properties:
                project_id:
                    description: The UUID of this entity
                    type: string
                    format: uuid
                name:
                    description: "The functional requirement"
                    type: string
                    example: 'FR #1'
                fos:
                    description: "The IDs of the set of functional objects linked to this functional requirement"
                    type: array
                    items:
                        type: string
                        format: uuid
                    example:
                        - 1cfda9b4-1466-4695-8ab2-c19848fa4542
                        - 884deff4-9a42-4436-8ef2-561777a4f3fd
                        - 2853000a-ec64-4d5b-9dcd-f73d8a79e1cc
            required:
                - name
                - fos
            example:
                name: 'FR #1'
                fos:
                    - 0d72e486-74cf-45bc-b11e-cbb7a16b698f
                    - 91990373-dc68-4705-ace8-2a4d36d5bcce
                    - fbdd7a8a-57a6-46d1-a2d1-af57943fe5cc
        functional_requirement_with_id:
            allOf:
                - $ref: '#/components/schemas/functional_requirement'
            type: object
            properties:
                id:
                    description: The UUID of this entity
                    type: string
                    format: uuid
            required:
                - id
            example:
                id: 1cfda9b4-1466-4695-8ab2-c19848fa4542
                name: 'FR #1'
                fos:
                    - 0d72e486-74cf-45bc-b11e-cbb7a16b698f
                    - 91990373-dc68-4705-ace8-2a4d36d5bcce
                    - fbdd7a8a-57a6-46d1-a2d1-af57943fe5cc
        functional_output:
            type: object
            properties:
                data_dictionary_entry:
                    description: "The fo data dictionary entry"
                    $ref: '#/components/schemas/data_dictionary_entry'
                firs:
                    description: "The set of functional information requirements associated with this functional output"
                    type: array
                    items:
                        $ref: '#/components/schemas/firs'
                    example:
                        - 'FIR #1'
                        - 'FIR #2'
                assets:
                    description: "The IDs of the set of assets linked to this functional object"
                    type: array
                    items:
                        type: string
                        format: uuid
                    example:
                        - 1cfda9b4-1466-4695-8ab2-c19848fa4542
                        - 884deff4-9a42-4436-8ef2-561777a4f3fd
                        - 2853000a-ec64-4d5b-9dcd-f73d8a79e1cc
            required:
                - data_dictionary_entry
                - firs
                - assets
            example:
                data_dictionary_entry:
                    id: EF_15
                    text: EF_15-Earthworks and remediation #(output only)
                firs:
                    - 'FIR #1'
                    - 'FIR #2'
                assets:
                    - 1cfda9b4-1466-4695-8ab2-c19848fa4542
                    - 884deff4-9a42-4436-8ef2-561777a4f3fd
                    - 2853000a-ec64-4d5b-9dcd-f73d8a79e1cc
        functional_output_with_id:
            allOf:
                - $ref: '#/components/schemas/functional_output'
            type: object
            properties:
                id:
                    description: The UUID of this entity
                    type: string
                    format: uuid
            required:
                - id
            example:
                id: 0d72e486-74cf-45bc-b11e-cbb7a16b698f
                data_dictionary_entry:
                    id: 'EF_37_17_15'
                    text: 'Chimneys'
                firs:
                    - 'FIR #1'
                    - 'FIR #2'
                assets:
                    - 1cfda9b4-1466-4695-8ab2-c19848fa4542
                    - 884deff4-9a42-4436-8ef2-561777a4f3fd
                    - 2853000a-ec64-4d5b-9dcd-f73d8a79e1cc
        asset:
            type: object
            properties:
                data_dictionary_entry:
                    description: "The asset data dictionary entry"
                    $ref: '#/components/schemas/data_dictionary_entry'
                airs:
                    description: "The set of asset information requirements associated with this asset"
                    type: array
                    items:
                        $ref: '#/components/schemas/airs_with_linked_oirs'
                    example:
                        - airs:
                            - id: '2853000a-ec64-4d5b-9dcd-f73d8a79e1aa'
                            - airs: 'AIR #1'
                            - id: '2853000a-ec64-4d5b-9dcd-f73d8a79e1ab'
                            - airs: 'AIR #2'
            required:
                - data_dictionary_entry
                - airs
            example:
                data_dictionary_entry:
                    id: Ss_15_30_15_65
                    text: Ss_15_30_15_65-Preliminary concrete cleaning systems  #(output only)
                airs:
                    - 'AIR #1'
                    - 'AIR #2'

        asset_with_id:
            allOf:
                - $ref: '#/components/schemas/asset'
            type: object
            properties:
                id:
                    description: The UUID of this entity
                    type: string
                    format: uuid
            required:
                - id
            example:
                id: 5799ee92-f25c-4173-aecd-dfa871719065
                data_dictionary_entry:
                    id: 'Ss_15_30_15_65'
                    text: 'Ss_15_30_15_65 - Preliminary concrete cleaning systems'  #(output only)
                airs:
                    - 'AIR #1'
                    - 'AIR #2'
        data_dictionary_entry:
            type: object
            properties:
                entry_id:
                    description: The entry id of this entry
                    type: string
                text:
                    description: The text of this entry  #(output only)
                    type: string
            required:
                - entry_id
                - text
            example:
                entryid: Ss_15_30_15_65
                text: Ss_15_30_15_65-Preliminary concrete cleaning systems  #(output only)

        asset_data_dictionary:
            type: object
            properties:
                id:
                    description: The UUID of this entity
                    type: string
                    format: uuid
                name:
                    description: The name of the data dictionary
                    type: string
                    example:
                        'Sample Asset Data Dictionary'
            required:
                - name

        functional_output_data_dictionary:
            type: object
            properties:
                id:
                    description: The UUID of this entity
                    type: string
                    format: uuid
                name:
                    description: The name of the data dictionary
                    type: string
                    example:
                        'Sample FO Data Dictionary'
            required:
                - name
        project:
            type: object
            properties:
                name:
                    description: The name of the project
                    type: string
                    minLength: 1
                    example: 'Sample Project'
                fo_dd_id:
                    description: The UUID of the functional output data dictionary
                    type: string
                    format: uuid
                asset_dd_id:
                    description: The UUID of the asset data dictionary
                    type: string
                    format: uuid

            required:
                - name
                - fo_dd_id
                - asset_dd_id
            example:
                name: 'Sample project'
                fo_dd_id: 5799ee92-f25c-4173-aecd-dfa871719065
                asset_dd_id: 1234ee92-f25c-4173-aecd-dfa871719065
        project_with_id:
            allOf:
                - $ref: '#/components/schemas/project'
            type: object
            properties:
                id:
                    description: The UUID of this entity
                    type: string
                    format: uuid
            required:
                - id
                - name
                - fo_dd_id
                - asset_dd_id
            example:
                id: 5799ee92-f25c-4173-aecd-dfa871719065
                name: 'Sample project'
                fo_dd_id: 5799ee92-f25c-4173-aecd-dfa871719065
                asset_dd_id: 1234ee92-f25c-4173-aecd-dfa871719065

        project_with_import_project_ids:
            allOf:
            -   $ref: '#/components/schemas/project'
            type: object
            properties:
                import_firs_project_id:
                    description: The UUID of the project from which FIRs are to be imported
                    type: string
                    format: uuid
                import_airs_project_id:
                    description: The UUID of the project from which AIRs are to be imported
                    type: string
                    format: uuid
        oo_version:
            type: object
            properties:
                id:
                    description: The id of the oo version
                    type: string
                    format: uuid
                oo_id:
                    description: The UUID of the organisational objective
                    type: string
                    format: uuid
                name:
                    description: The name for this version of the oo
                    type: string
                date_created:
                    description: The creation date of the oo version
                    type: integer
                    format: int64
            required:
                - id
                - oo_id
                - name
                - date_created
            example:
                id: 3a1e57a7-bc10-48e4-b8a7-2ced7ba38e73
                oo_id: 1234ee92-f25c-4173-aecd-dfa871719065
                name: 'Organisational objective #1 version 2'
                date_created: 56763653535

        oir:
            type: object
            properties:
                id:
                    description: The UUID id of the oir
                    type: string
                    format: uuid
                oir:
                    description: The text of the oir
                    type: string
            required:
                - oir

            example:
                id: 3a1e57a7-bc10-48e4-b8a7-2ced7ba38e73
                oir: OIR#1

        oirs_with_linked_airs:
            allOf:
                -   $ref: '#/components/schemas/oir'
            type: object
            properties:
                airs:
                    description: Linked Airs
                    type: array
                    items:
                        $ref: '#/components/schemas/airs'
            required:
                - airs

        user:
            type: object
            properties:
                user_id:
                    description: The UUID of the user
                    type: string
                    format: uuid
                email_address:
                    description: "The email address of the user"
                    type: string
                    example: 'fred.smith@gmail.com'
                is_super_user:
                    description: Whether super user or not
                    type: boolean
                    example: false

            required:
                - is_super_user

            example:
                user_id: 'FR #1'
                email_address: 'name@example.com'
                is_super_user: true

        project_permissions:
            type: object
            properties:
                user_id:
                    description: The UUID of the user
                    type: string
                    format: uuid
                project_id:
                    description: The UUID of the project
                    type: string
                    format: uuid
                permissions:
                    description: All permissions for user/project
                    type: array
                    items:
                        $ref: '#/components/schemas/permission_type'

        user_permissions:
            type: object
            properties:
                user_id:
                    description: The UUID of the user
                    type: string
                    format: uuid
                permissions:
                    description: All permissions for user (except super user)
                    type: array
                    items:
                        $ref: '#/components/schemas/permission_type'

        permission_type:
            type: object
            properties:
                id:
                    description: Id of the permission type
                    type: integer
                name:
                    description: The name of the permission type
                    type: string
                is_granted:
                    description: whether permission type granted to this user
                    type: boolean
        firs:
            type: object
            properties:
                id:
                    description: Id of the firs object
                    type: string
                firs:
                    description: Firs text
                    type: string

            required:
                - id
                - firs
        airs:
            type: object
            properties:
                id:
                    description: Id of the airs object
                    type: string
                airs:
                    description: Airs text
                    type: string
            required:
                - id
                - airs

        airs_with_linked_oirs:
            allOf:
                -   $ref: '#/components/schemas/airs'
            type: object
            properties:
                oirs:
                    description: Linked Oirs
                    type: array
                    items:
                        $ref: '#/components/schemas/oir'
            required:
                - oirs


    responses:
        BadRequest:
            description: Bad request - The service was unable to understand the request or information required in the request was missing.
        Unauthorised:
            description: Unauthorised - Authentication has failed or not been provided.
        Forbidden:
            description: Forbidden - Authentication has been provided, but the requested operation is not allowed.
        NotFound:
            description: The resource was not found.